# coding: utf-8

"""
    DUPR APIs

    External RESTful APIs to access DUPR ratings, users and provide matches.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from dupr_prod.models.external_search_filter import ExternalSearchFilter

class TestExternalSearchFilter(unittest.TestCase):
    """ExternalSearchFilter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExternalSearchFilter:
        """Test ExternalSearchFilter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExternalSearchFilter`
        """
        model = ExternalSearchFilter()
        if include_optional:
            return ExternalSearchFilter(
                age = dupr_prod.models.external_age_range_filter.ExternalAgeRangeFilter(
                    max = 25, 
                    min = 18, ),
                gender = 'MALE',
                location = dupr_prod.models.external_filter_location.ExternalFilterLocation(
                    address = 'Austin, TX, USA', 
                    lat = 72.34654645455, 
                    lng = 19.55151584984, 
                    radius_in_meters = 40233.6, ),
                rating = dupr_prod.models.external_rating_filter.ExternalRatingFilter(
                    max = 3.3, 
                    min = 2.3, 
                    reliable = True, 
                    type = 'DOUBLES', )
            )
        else:
            return ExternalSearchFilter(
        )
        """

    def testExternalSearchFilter(self):
        """Test ExternalSearchFilter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
